/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.personal.gallery.kafkainternals.avro.pojo;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Inning extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8494008679158541363L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Inning\",\"namespace\":\"com.personal.gallery.kafkainternals.avro.pojo\",\"fields\":[{\"name\":\"battingTeam\",\"type\":\"string\"},{\"name\":\"bowlingTeam\",\"type\":\"string\"},{\"name\":\"totalRuns\",\"type\":\"long\"},{\"name\":\"totalWickets\",\"type\":\"long\"},{\"name\":\"totalOvers\",\"type\":\"double\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Inning> ENCODER =
      new BinaryMessageEncoder<Inning>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Inning> DECODER =
      new BinaryMessageDecoder<Inning>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Inning> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Inning> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Inning>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Inning to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Inning from a ByteBuffer. */
  public static Inning fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence battingTeam;
  @Deprecated public java.lang.CharSequence bowlingTeam;
  @Deprecated public long totalRuns;
  @Deprecated public long totalWickets;
  @Deprecated public double totalOvers;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Inning() {}

  /**
   * All-args constructor.
   * @param battingTeam The new value for battingTeam
   * @param bowlingTeam The new value for bowlingTeam
   * @param totalRuns The new value for totalRuns
   * @param totalWickets The new value for totalWickets
   * @param totalOvers The new value for totalOvers
   */
  public Inning(java.lang.CharSequence battingTeam, java.lang.CharSequence bowlingTeam, java.lang.Long totalRuns, java.lang.Long totalWickets, java.lang.Double totalOvers) {
    this.battingTeam = battingTeam;
    this.bowlingTeam = bowlingTeam;
    this.totalRuns = totalRuns;
    this.totalWickets = totalWickets;
    this.totalOvers = totalOvers;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return battingTeam;
    case 1: return bowlingTeam;
    case 2: return totalRuns;
    case 3: return totalWickets;
    case 4: return totalOvers;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: battingTeam = (java.lang.CharSequence)value$; break;
    case 1: bowlingTeam = (java.lang.CharSequence)value$; break;
    case 2: totalRuns = (java.lang.Long)value$; break;
    case 3: totalWickets = (java.lang.Long)value$; break;
    case 4: totalOvers = (java.lang.Double)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'battingTeam' field.
   * @return The value of the 'battingTeam' field.
   */
  public java.lang.CharSequence getBattingTeam() {
    return battingTeam;
  }

  /**
   * Sets the value of the 'battingTeam' field.
   * @param value the value to set.
   */
  public void setBattingTeam(java.lang.CharSequence value) {
    this.battingTeam = value;
  }

  /**
   * Gets the value of the 'bowlingTeam' field.
   * @return The value of the 'bowlingTeam' field.
   */
  public java.lang.CharSequence getBowlingTeam() {
    return bowlingTeam;
  }

  /**
   * Sets the value of the 'bowlingTeam' field.
   * @param value the value to set.
   */
  public void setBowlingTeam(java.lang.CharSequence value) {
    this.bowlingTeam = value;
  }

  /**
   * Gets the value of the 'totalRuns' field.
   * @return The value of the 'totalRuns' field.
   */
  public java.lang.Long getTotalRuns() {
    return totalRuns;
  }

  /**
   * Sets the value of the 'totalRuns' field.
   * @param value the value to set.
   */
  public void setTotalRuns(java.lang.Long value) {
    this.totalRuns = value;
  }

  /**
   * Gets the value of the 'totalWickets' field.
   * @return The value of the 'totalWickets' field.
   */
  public java.lang.Long getTotalWickets() {
    return totalWickets;
  }

  /**
   * Sets the value of the 'totalWickets' field.
   * @param value the value to set.
   */
  public void setTotalWickets(java.lang.Long value) {
    this.totalWickets = value;
  }

  /**
   * Gets the value of the 'totalOvers' field.
   * @return The value of the 'totalOvers' field.
   */
  public java.lang.Double getTotalOvers() {
    return totalOvers;
  }

  /**
   * Sets the value of the 'totalOvers' field.
   * @param value the value to set.
   */
  public void setTotalOvers(java.lang.Double value) {
    this.totalOvers = value;
  }

  /**
   * Creates a new Inning RecordBuilder.
   * @return A new Inning RecordBuilder
   */
  public static com.personal.gallery.kafkainternals.avro.pojo.Inning.Builder newBuilder() {
    return new com.personal.gallery.kafkainternals.avro.pojo.Inning.Builder();
  }

  /**
   * Creates a new Inning RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Inning RecordBuilder
   */
  public static com.personal.gallery.kafkainternals.avro.pojo.Inning.Builder newBuilder(com.personal.gallery.kafkainternals.avro.pojo.Inning.Builder other) {
    return new com.personal.gallery.kafkainternals.avro.pojo.Inning.Builder(other);
  }

  /**
   * Creates a new Inning RecordBuilder by copying an existing Inning instance.
   * @param other The existing instance to copy.
   * @return A new Inning RecordBuilder
   */
  public static com.personal.gallery.kafkainternals.avro.pojo.Inning.Builder newBuilder(com.personal.gallery.kafkainternals.avro.pojo.Inning other) {
    return new com.personal.gallery.kafkainternals.avro.pojo.Inning.Builder(other);
  }

  /**
   * RecordBuilder for Inning instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Inning>
    implements org.apache.avro.data.RecordBuilder<Inning> {

    private java.lang.CharSequence battingTeam;
    private java.lang.CharSequence bowlingTeam;
    private long totalRuns;
    private long totalWickets;
    private double totalOvers;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.personal.gallery.kafkainternals.avro.pojo.Inning.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.battingTeam)) {
        this.battingTeam = data().deepCopy(fields()[0].schema(), other.battingTeam);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.bowlingTeam)) {
        this.bowlingTeam = data().deepCopy(fields()[1].schema(), other.bowlingTeam);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.totalRuns)) {
        this.totalRuns = data().deepCopy(fields()[2].schema(), other.totalRuns);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.totalWickets)) {
        this.totalWickets = data().deepCopy(fields()[3].schema(), other.totalWickets);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.totalOvers)) {
        this.totalOvers = data().deepCopy(fields()[4].schema(), other.totalOvers);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Inning instance
     * @param other The existing instance to copy.
     */
    private Builder(com.personal.gallery.kafkainternals.avro.pojo.Inning other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.battingTeam)) {
        this.battingTeam = data().deepCopy(fields()[0].schema(), other.battingTeam);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.bowlingTeam)) {
        this.bowlingTeam = data().deepCopy(fields()[1].schema(), other.bowlingTeam);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.totalRuns)) {
        this.totalRuns = data().deepCopy(fields()[2].schema(), other.totalRuns);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.totalWickets)) {
        this.totalWickets = data().deepCopy(fields()[3].schema(), other.totalWickets);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.totalOvers)) {
        this.totalOvers = data().deepCopy(fields()[4].schema(), other.totalOvers);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'battingTeam' field.
      * @return The value.
      */
    public java.lang.CharSequence getBattingTeam() {
      return battingTeam;
    }

    /**
      * Sets the value of the 'battingTeam' field.
      * @param value The value of 'battingTeam'.
      * @return This builder.
      */
    public com.personal.gallery.kafkainternals.avro.pojo.Inning.Builder setBattingTeam(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.battingTeam = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'battingTeam' field has been set.
      * @return True if the 'battingTeam' field has been set, false otherwise.
      */
    public boolean hasBattingTeam() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'battingTeam' field.
      * @return This builder.
      */
    public com.personal.gallery.kafkainternals.avro.pojo.Inning.Builder clearBattingTeam() {
      battingTeam = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'bowlingTeam' field.
      * @return The value.
      */
    public java.lang.CharSequence getBowlingTeam() {
      return bowlingTeam;
    }

    /**
      * Sets the value of the 'bowlingTeam' field.
      * @param value The value of 'bowlingTeam'.
      * @return This builder.
      */
    public com.personal.gallery.kafkainternals.avro.pojo.Inning.Builder setBowlingTeam(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.bowlingTeam = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'bowlingTeam' field has been set.
      * @return True if the 'bowlingTeam' field has been set, false otherwise.
      */
    public boolean hasBowlingTeam() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'bowlingTeam' field.
      * @return This builder.
      */
    public com.personal.gallery.kafkainternals.avro.pojo.Inning.Builder clearBowlingTeam() {
      bowlingTeam = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalRuns' field.
      * @return The value.
      */
    public java.lang.Long getTotalRuns() {
      return totalRuns;
    }

    /**
      * Sets the value of the 'totalRuns' field.
      * @param value The value of 'totalRuns'.
      * @return This builder.
      */
    public com.personal.gallery.kafkainternals.avro.pojo.Inning.Builder setTotalRuns(long value) {
      validate(fields()[2], value);
      this.totalRuns = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'totalRuns' field has been set.
      * @return True if the 'totalRuns' field has been set, false otherwise.
      */
    public boolean hasTotalRuns() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'totalRuns' field.
      * @return This builder.
      */
    public com.personal.gallery.kafkainternals.avro.pojo.Inning.Builder clearTotalRuns() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalWickets' field.
      * @return The value.
      */
    public java.lang.Long getTotalWickets() {
      return totalWickets;
    }

    /**
      * Sets the value of the 'totalWickets' field.
      * @param value The value of 'totalWickets'.
      * @return This builder.
      */
    public com.personal.gallery.kafkainternals.avro.pojo.Inning.Builder setTotalWickets(long value) {
      validate(fields()[3], value);
      this.totalWickets = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'totalWickets' field has been set.
      * @return True if the 'totalWickets' field has been set, false otherwise.
      */
    public boolean hasTotalWickets() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'totalWickets' field.
      * @return This builder.
      */
    public com.personal.gallery.kafkainternals.avro.pojo.Inning.Builder clearTotalWickets() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalOvers' field.
      * @return The value.
      */
    public java.lang.Double getTotalOvers() {
      return totalOvers;
    }

    /**
      * Sets the value of the 'totalOvers' field.
      * @param value The value of 'totalOvers'.
      * @return This builder.
      */
    public com.personal.gallery.kafkainternals.avro.pojo.Inning.Builder setTotalOvers(double value) {
      validate(fields()[4], value);
      this.totalOvers = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'totalOvers' field has been set.
      * @return True if the 'totalOvers' field has been set, false otherwise.
      */
    public boolean hasTotalOvers() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'totalOvers' field.
      * @return This builder.
      */
    public com.personal.gallery.kafkainternals.avro.pojo.Inning.Builder clearTotalOvers() {
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Inning build() {
      try {
        Inning record = new Inning();
        record.battingTeam = fieldSetFlags()[0] ? this.battingTeam : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.bowlingTeam = fieldSetFlags()[1] ? this.bowlingTeam : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.totalRuns = fieldSetFlags()[2] ? this.totalRuns : (java.lang.Long) defaultValue(fields()[2]);
        record.totalWickets = fieldSetFlags()[3] ? this.totalWickets : (java.lang.Long) defaultValue(fields()[3]);
        record.totalOvers = fieldSetFlags()[4] ? this.totalOvers : (java.lang.Double) defaultValue(fields()[4]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Inning>
    WRITER$ = (org.apache.avro.io.DatumWriter<Inning>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Inning>
    READER$ = (org.apache.avro.io.DatumReader<Inning>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
